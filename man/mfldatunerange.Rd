% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mfldatunerange.R
\name{mfldatunerange}
\alias{mfldatunerange}
\title{Generate Tuning Range for Multivariate Discriminant Analysis}
\usage{
mfldatunerange(Xtrain = Xtrain, Y = Y, ngrid = 8, standardize = TRUE)
}
\arguments{
\item{Xtrain}{A data frame containing the training data. The first three columns should contain identifiers (such as `id`, `time`, and `group`), and subsequent columns should contain the features used for classification.}

\item{Y}{A vector of class labels corresponding to the training data. It should have the same length as the number of rows in `Xtrain`.}

\item{ngrid}{An integer specifying the number of grid points to generate for the tuning range. Default is 8.}

\item{standardize}{A logical value indicating whether to standardize the data to have mean zero and variance one for each time point and each variable. Default is TRUE.}
}
\value{
A list containing:
  \item{Tauvec}{A list of sequences of tuning parameters for each class dimension based on the grid search results.}
}
\description{
This function computes the tuning ranges for the sparsity parameter in multivariate functional linear discriminant analysis (MFLDA) based on provided training data. It standardizes the data if specified and uses a grid search approach to determine optimal parameter values.
}
\details{
The function performs the following steps:
1. It prepares the input data, optionally standardizing it based on the `standardize` parameter.
2. It uses a custom function `myfastLDAnonsparse` to perform the preliminary analysis.
3. It generates a grid of tuning parameters by iteratively refining based on selectivity and sparsity conditions.
4. The final output contains a range of optimal tuning parameters for each class.
}
\examples{
# Assuming Xtrain is your training data frame and Y contains the corresponding labels
result <- mfldatunerange(Xtrain = Xtrain, Y = Y, ngrid = 10, standardize = TRUE)

# Access the tuning parameters
tuning_params <- result$Tauvec

}
