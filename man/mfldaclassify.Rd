% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mfldaclassify.R
\name{mfldaclassify}
\alias{mfldaclassify}
\title{Classify Test Data Using Multivariate Linear Discriminant Analysis}
\usage{
mfldaclassify(
  hatalpha = hatalpha,
  Xtestdata = Xtestdata,
  Xdata = Xdata,
  Y = trainY,
  standardize = TRUE
)
}
\arguments{
\item{hatalpha}{A matrix or list of matrices containing the estimated coefficients for the linear discriminants obtained from the training data.}

\item{Xtestdata}{A data frame containing the test data, structured similarly to the training data, with identifiers in the first three columns and features in the subsequent columns.}

\item{Xdata}{A data frame containing the training data, with the same structure as `Xtestdata`.}

\item{Y}{A vector of class labels for the training data. It should match the length of the number of unique samples in `Xdata`.}

\item{standardize}{A logical value indicating whether to standardize the data to have mean zero and variance one for each time point and each variable before classification. Default is TRUE.}
}
\value{
A list containing:
  \item{PredictedClass}{A vector of predicted class labels for the test data.}
  \item{Predclass.df}{A data frame of predicted class labels for each test sample across different dimensions of the discriminant space.}
}
\description{
This function classifies test data based on learned sparse functional linear discriminant analysis parameters (features discriminant scores). It projects both training and test data onto the discriminant space and predicts the class labels for the test samples.
}
\details{
The function performs the following steps:
1. Standardizes the training and test data if the `standardize` parameter is set to TRUE.
2. Projects both the training and test data into the discriminant space using the estimated coefficients.
3. Computes the Euclidean distances between projected test data and the class means in the discriminant space.
4. Assigns class labels to the test samples based on the closest mean in the discriminant space.
}
\examples{
# Assuming hatalpha contains the discriminant scores, Xtestdata is your test set,
# Xdata is your training set, and Y contains the corresponding training labels.
classification_result <- mfldaclassify(hatalpha = hatalpha, Xtestdata = Xtestdata, Xdata = Xdata, Y = trainY, standardize = TRUE)

# Access predicted class labels
predicted_classes <- classification_result$PredictedClass

# Access detailed prediction data frame
predictions_df <- classification_result$Predclass.df

}
